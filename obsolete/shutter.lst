gpasm-0.12.0 beta               shutter.s   6-3-2006  18:49:01           PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00001 ; shutter driver program for 18f458
               00002 
               00003 ; Sends the following signals in a loop.
               00004 ;
               00005 ; Send mirror lockup pulse for 1 second if mirror lockup enabled.
               00006 ; Delay (1) to settle down.
               00007 ;
               00008 ; Pull down PNP transistor to open the shutter.
               00009 ; Delay (2) to expose sensor.
               00010 ; Raise PNP transistor to close the shutter
               00011 ; Delay (3) to store exposure.
               00012 
               00013 
               00014 ; If bulb mode is used, the driver determines the shutter speed.
               00015 ; Automatic shutter speeds override the program but delays 2 & 3 must be
               00016 ; long enough to let the automatic shutter finish or the driver will
               00017 ; lose sync.
               00018 ; If using automatic shutter speeds, delay 2 can be used as a delay between
               00019 ; exposures.
               00020 ;
               00021 ; 
               00022 ; Delay values are selected using dip switches:
               00023 ;
               00024 ; Mirror lockup delays ( bits 7, 6 ):
               00025 ; 00 - 0 seconds/disabled
               00026 ; 01 - 3 seconds
               00027 ; 10 - 5 seconds
               00028 ; 11 - 10 seconds
               00029 ;
               00030 ;
               00031 ; Exposure delay values ( bits 5, 4, 3, 2 ):
               00032 ; 0000 - continuous
               00033 ; 0001 - 1 seconds
               00034 ; 0010 - 2 seconds
               00035 ; 0011 - 5 seconds
               00036 ; 0100 - 10 seconds
               00037 ; 0101 - 15 seconds
               00038 ; 0110 - 30 seconds
               00039 ; 0111 - 45 seconds
               00040 ; 1000 - 60 seconds
               00041 ; 1001 - 2 minutes
               00042 ; 1010 - 5 minutes
               00043 ; Flash storage/between frame delays ( bits 1, 0 ):
               00044 ; 00 - 1 second Canon requires shutter release delay.
               00045 ; 01 - 5 seconds
               00046 ; 10 - 10 seconds
               00047 ; 11 - 30 seconds
               00048 ;
               00049 ;
               00050 ; Sample dip switch settings:
               00051 ; 3 second mirror lock
               00052 ; 30 second exposure
               00053 ; 1 second storage
               00054 ;
gpasm-0.12.0 beta               shutter.s   6-3-2006  18:49:01           PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00055 ; 10010100
               00056 
               00057 
               00058 ; Parts:
               00059 ; The remote controls from Canon are $50 - $133.
               00060 ; 2 way switch - mode switch.                                       $1
               00061 ; 2 way switch - light meter switch.                                $1
               00062 ; momentary pushbutton to bypass microprocessor                     $1
               00063 ; 8 bit dip switch to set delays                                    $1.10
               00064 ; N type connector                                               $$$$50
               00065 
               00066 ; Pins for 18F1220:
               00067 ; RB0 - mirror lockup enable
               00068 ; RB1 - shutter output
               00069 ; RA6 - mirror delay bit
               00070 ; RA7 - mirror delay bit
               00071 ; RA0 - exposure delay bit
               00072 ; RA1 - exposure delay bit
               00073 ; RA2 - exposure delay bit
               00074 ; RA3 - exposure delay bit
               00075 ; RB2 - storage delay bit
               00076 ; RB3 - storage delay bit
               00077 
               00078 
               00079 ; All programming can be done in the programming harness.
               00080 ; First program the configuration registers to use the internal oscillator.
               00081 ;       programmer -c 0x300000 1100100000000000
               00082 ; Second install the bootloader.
               00083 ;       programmer bootloader.hex
               00084 ; Third install the shutter program.
               00085 ;       programmer -b shutter.hex
               00086 
               00087 #include "util.inc"
               00001 #include "p18f1220.inc"
               00001         LIST
               00002 ; P18F1220.INC  Standard Header File, Version 1.0   Microchip Technology, Inc.
               00772         LIST
               00002 
               00003 
               00004 
  00000000     00005 RESETVECTOR     = H'0000'
  00000008     00006 INTVECTORHI     = H'0008'
  00000018     00007 INTVECTORLO     = H'0018'
               00008 
  00000200     00009 PROGRAM_START = H'200'
  00000208     00010 PROGRAM_INTERRUPTHI = H'208'
  00000210     00011 PROGRAM_INTERRUPTLO = H'210'
               00012 
               00013 
               00014 
               00015 
               00016 ; data for the 18f1220 stores a 16 bit value
               00017 DATA_BE macro word1, word2
               00018         DATA word1
gpasm-0.12.0 beta               shutter.s   6-3-2006  18:49:01           PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00019         DATA word2
               00020         ENDM
               00021 
               00022 SET_REGISTER macro reg, literal
               00023         movlw literal
               00024         movwf reg
               00025         ENDM
               00026 
               00027 SET_REGISTER16 macro reglo, literal
               00028         movlw LOW(literal)
               00029         movwf reglo
               00030         movlw HIGH(literal)
               00031         movwf reglo + D'1'
               00032         ENDM
               00033 
               00034 ; timer must be written high byte first or the high byte will be discarded
               00035 SET_TIMER_REGISTER macro reglo, literal
               00036         movlw HIGH(literal)
               00037         movwf reglo + D'1'
               00038         movlw LOW(literal)
               00039         movwf reglo
               00040         ENDM
               00041 
               00042 ; the assembler doesn't seem to take 32 bit literals so we
               00043 ; split the literal into shorts for this one
               00044 SET_REGISTER32 macro reglo, literal31_16, literal15_0
               00045         movlw LOW(literal15_0)
               00046         movwf reglo
               00047         movlw HIGH(literal15_0)
               00048         movwf reglo + D'1'
               00049         movlw LOW(literal31_16)
               00050         movwf reglo + D'2'
               00051         movlw HIGH(literal31_16)
               00052         movwf reglo + D'3'
               00053         ENDM
               00054 
               00055 ; the assembler doesn't seem to take 32 bit literals so we
               00056 ; split the literal into shorts for this one
               00057 SET_REGISTER48 macro reglo, literal47_32, literal31_16, literal15_0
               00058         movlw HIGH(literal47_32)
               00059         movwf reglo + D'5'
               00060         movlw LOW(literal47_32)
               00061         movwf reglo + D'4'
               00062         movlw HIGH(literal31_16)
               00063         movwf reglo + D'3'
               00064         movlw LOW(literal31_16)
               00065         movwf reglo + D'2'
               00066         movlw HIGH(literal15_0)
               00067         movwf reglo + D'1'
               00068         movlw LOW(literal15_0)
               00069         movwf reglo
               00070         ENDM
               00071 
               00072 ; the assembler doesn't seem to take 32 bit literals so we
gpasm-0.12.0 beta               shutter.s   6-3-2006  18:49:01           PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00073 ; split the literal into shorts for this one
               00074 SET_REGISTER64 macro reglo, literal63_48, literal47_32, literal31_16, literal15_0
               00075         movlw LOW(literal15_0)
               00076         movwf reglo
               00077         movlw HIGH(literal15_0)
               00078         movwf reglo + D'1'
               00079         movlw LOW(literal31_16)
               00080         movwf reglo + D'2'
               00081         movlw HIGH(literal31_16)
               00082         movwf reglo + D'3'
               00083         movlw LOW(literal47_32)
               00084         movwf reglo + D'4'
               00085         movlw HIGH(literal47_32)
               00086         movwf reglo + D'5'
               00087         movlw LOW(literal63_48)
               00088         movwf reglo + D'6'
               00089         movlw HIGH(literal63_48)
               00090         movwf reglo + D'7'
               00091         ENDM
               00092 
               00093 CLEAR_REGISTER48 macro reglo
               00094         clrf reglo
               00095         clrf reglo + D'1'
               00096         clrf reglo + D'2'
               00097         clrf reglo + D'3'
               00098         clrf reglo + D'4'
               00099         clrf reglo + D'5'
               00100         ENDM
               00101 
               00102 CLEAR_REGISTER32 macro reglo
               00103         clrf reglo
               00104         clrf reglo + D'1'
               00105         clrf reglo + D'2'
               00106         clrf reglo + D'3'
               00107         ENDM
               00108 
               00109 CLEAR_REGISTER16 macro reglo
               00110         clrf reglo
               00111         clrf reglo + D'1'
               00112         ENDM
               00113 
               00114 ; clear a timer register
               00115 CLEAR_TIMER_REGISTER macro reglo
               00116         clrf reglo + D'1'
               00117         clrf reglo
               00118         ENDM
               00119 
               00120 ; increment register by 1 without changing status bits
               00121 INC_REGISTER macro reg
               00122         movf STATUS, W        ; store carry bit
               00123         incf reg, F
               00124         movwf STATUS          ; retrieve carry bit
               00125         ENDM
               00126 
gpasm-0.12.0 beta               shutter.s   6-3-2006  18:49:01           PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00127 ; copy value of src register to dst register
               00128 COPY_REGISTER macro dst, src
               00129         movff src, dst
               00130         ENDM
               00131 
               00132 ; copy value of src register to dst register
               00133 COPY_REGISTER64 macro dst, src
               00134         movff src, dst
               00135         movff src + D'1', dst + D'1'
               00136         movff src + D'2', dst + D'2'
               00137         movff src + D'3', dst + D'3'
               00138         movff src + D'4', dst + D'4'
               00139         movff src + D'5', dst + D'5'
               00140         movff src + D'6', dst + D'6'
               00141         movff src + D'7', dst + D'7'
               00142         ENDM
               00143 
               00144 COPY_REGISTER32 macro dst, src
               00145         movff src, dst
               00146         movff src + D'1', dst + D'1'
               00147         movff src + D'2', dst + D'2'
               00148         movff src + D'3', dst + D'3'
               00149         ENDM
               00150 
               00151 ; copy value of src register to dst register
               00152 COPY_REGISTER16 macro dst, src
               00153         movff src, dst
               00154         movff src + D'1', dst + D'1'
               00155         ENDM;
               00156 
               00157 ; copy value of src register to dst register starting with the high byte
               00158 ; required when setting timers
               00159 COPY_TIMER_REGISTER macro dst, src
               00160         movff src + D'1', dst + D'1'
               00161         movff src, dst
               00162         ENDM;
               00163 
               00164 
               00165 ; add literal to register and store in register
               00166 ADD_LITERAL macro reg, literal
               00167         movlw literal
               00168         addwf reg, F
               00169         ENDM
               00170 
               00171 ; add reg1 to reg2 and store in reg1
               00172 ADD_REGISTER macro reg1, reg2
               00173         movf reg2, W
               00174         addwf reg1, F
               00175         ENDM
               00176 
               00177 ; add 16 bit literal to 32 bit dstlo and store result in dst
               00178 ADD32_LITERAL macro dstlo, literal
               00179         movlw (literal & H'ff')
               00180         addwf dstlo, F
gpasm-0.12.0 beta               shutter.s   6-3-2006  18:49:01           PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00181         btfsc STATUS, C
               00182                 incf dstlo + D'1', F ; overflow
               00183                 btfsc STATUS, C
               00184                         incf dstlo + D'2', F ; overflow
               00185                         btfsc STATUS, C
               00186                                 incf dstlo + D'3', F ; overflow
               00187 
               00188         movlw (literal & H'ff00') >> 8
               00189         addwf dstlo + D'1', F
               00190         btfsc STATUS, C
               00191                 incf dstlo + D'2', F ; overflow
               00192                 btfsc STATUS, C
               00193                         incf dstlo + D'3', F ; overflow
               00194         ENDM
               00195 
               00196 
               00197 
               00198 ; add 32 bit src to 32 bit dst and store result in dst
               00199 ADD_REGISTER32 macro dstlo, srclo
               00200         movf srclo, W
               00201         addwf dstlo, F
               00202         addwfc dstlo + D'1', F
               00203         addwfc dstlo + D'2', F
               00204         addwfc dstlo + D'3', F
               00205 
               00206         movf srclo + D'1', W
               00207         addwf dstlo + D'1', F
               00208         addwfc dstlo + D'2', F
               00209         addwfc dstlo + D'3', F
               00210 
               00211         movf srclo + D'2', W
               00212         addwf dstlo + D'2', F
               00213         addwfc dstlo + D'3', F
               00214 
               00215         movf srclo + D'3', W
               00216         addwf dstlo + D'3', F
               00217         ENDM
               00218 
               00219 
               00220 
               00221 
               00222 ; subtract reg2 from reg1 and store result in reg1
               00223 SUBTRACT_REGISTER macro reg1, reg2
               00224         movf reg2, W
               00225         subwf reg1, F
               00226         ENDM
               00227 
               00228 
               00229 ; subtract 16 bit register srclo from dstlo and store result in dstlo
               00230 SUBTRACT16 macro dstlo, srclo
               00231         movf srclo, W
               00232         subwf dstlo, F
               00233         btfss STATUS, C
               00234                 decf dstlo + D'1', F ; negative result
gpasm-0.12.0 beta               shutter.s   6-3-2006  18:49:01           PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00235         movf srclo + D'1', W
               00236         subwf dstlo + D'1', F
               00237         ENDM
               00238 
               00239 
               00240 ; subtract 32 bit srclo from dstlo and store result in dstlo
               00241 SUBTRACT32 macro dstlo, srclo
               00242         movf srclo, W
               00243         subwf dstlo, F
               00244         btfss STATUS, C
               00245                 decf dstlo + D'1', F ; negative result
               00246                 btfss STATUS, C
               00247                         decf dstlo + D'2', F ; negative result
               00248                         btfss STATUS, C
               00249                                 decf dstlo + D'3', F
               00250 
               00251         movf srclo + D'1', W
               00252         subwf dstlo + D'1', F
               00253         btfss STATUS, C
               00254                 decf dstlo + D'2', F ; negative result
               00255                 btfss STATUS, C
               00256                         decf dstlo + D'3', F ; negative result
               00257 
               00258         movf srclo + D'2', W
               00259         subwf dstlo + D'2', F
               00260         btfss STATUS, C
               00261                 decf dstlo + D'3', F ; negative result
               00262 
               00263         movf srclo + D'3', W
               00264         subwf dstlo + D'3', F
               00265         ENDM
               00266 
               00267 
               00268 
               00269 
               00270 
               00271 ; skip if the contents of the registers are equal
               00272 SKIP_EQUAL macro reg1, reg2
               00273         movf reg1, W
               00274         cpfseq reg2
               00275         ENDM
               00276 
               00277 ; skip if the contents of the registers are not equal
               00278 SKIP_NOTEQUAL macro reg1, reg2
               00279         movf reg1, W
               00280         subwf reg2, W
               00281         btfsc STATUS, Z
               00282         ENDM
               00283 
               00284 ; skip if the register equals the literal
               00285 SKIP_EQUAL_LITERAL macro reg1, literal
               00286         movlw literal
               00287         cpfseq reg1, W
               00288         ENDM
gpasm-0.12.0 beta               shutter.s   6-3-2006  18:49:01           PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00289 
               00290 ; skip if the register is not equal to the literal
               00291 SKIP_NOTEQUAL_LITERAL macro reg1, literal
               00292         movlw literal
               00293         subwf reg1, W
               00294         btfsc STATUS, Z
               00295         ENDM
               00296 
               00297 
               00298 
               00299 ; skip if the register contents are > literal
               00300 SKIP_GREATER_LITERAL macro reg, literal
               00301 ; load register into W
               00302         movf reg, W
               00303 ; subtract register from literal and put result in W
               00304         sublw literal
               00305 ; if register was > literal, the result is negative
               00306         btfss STATUS, N
               00307         ENDM
               00308 
               00309 
               00310 
               00311 
               00312 ; skip if the register contents are > literal
               00313 SKIP_GREATEREQUAL_LITERAL macro reg, literal
               00314 ; subtract literal from register and put result in W
               00315         subwf reg, W
               00316 ; if result is negative, the N status is 1
               00317         btfsc STATUS, N
               00318         ENDM
               00319 
               00320 
               00321 
               00322 ; skip if reg1 < reg2
               00323 ; temp must point to a 32 bit register
               00324 SKIP_LESS32 macro temp, reg1, reg2
               00325         COPY_REGISTER32 temp, reg1
               00326         SUBTRACT32 temp, reg2
               00327         btfss temp + D'3', D'7' ; bit 31 is 1 if literal was > reg
               00328         ENDM
               00329 
               00330 
               00331 ; skip if register < literal
               00332 SKIP_LESS_LITERAL macro reg, literal
               00333         movlw literal
               00334         cpfslt reg
               00335         ENDM
               00336 
               00337 
               00338 
               00339 ; skip if the register contents are <= than literal
               00340 SKIP_LESSEQUAL macro reg, literal
               00341 ; load register into W
               00342         movf reg, W
gpasm-0.12.0 beta               shutter.s   6-3-2006  18:49:01           PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00343 ; subtract register from literal and put result in W
               00344         sublw literal
               00345 ; if register was <= literal, the result is not negative
               00346         btfsc STATUS, N
               00347         ENDM
               00348 
               00349 
               00350 
               00351 
               00352 
               00353 
               00354 
               00355 
               00356 
               00357 
               00358 
               00359 
               00360 
               00361 
               00362 
               00363 
               00364 
               00365 
               00366 
               00367 
               00368 
               00369 
               00370 
               00371 ; To be programmed into the microprocessor first while it's in the
               00372 ; programming socket.
               00373 ;
               00374 ; Then the microprocessor is transferred to the circuit.
               00375 ; PGC, PGD, and MCLR are connected to the programmer.
               00376 ; The programmer is run with -b to program the firmware using the bootloader.
               00377 ;
               00378 ; The program must contain 3 jump points to which the bootloader passes
               00379 ; through the 3 hardware vectors:
               00380 ; 
               00381 ; PROGRAM_START, PROGRAM_INTERRUPTHI, PROGRAM_INTERRUPTLO
               00382 ;
               00383 ; In the circuit we have:
               00384 ; PGC - pulled down in the application and connected to programmer
               00385 ; PGD - connected to programmer.  This is pulled down in the programmer.
               00386 ; 
               00387 ; The bootloader is programmed when the chip is in the programmer.  Then it runs
               00388 ; when the chip is in the circuit.
               00389 ; 
               00390 ; On reset or interrupt, 
               00391 ; the bootloader tests PGC and PGD for high.  If they're high it goes into 
               00392 ; programming mode.  If either is low it jumps to the program's reset vectors.
               00393 ; This allows the application to use interrupts and PGC to clock the debugger 
               00394 ; without going into the bootloader.
               00395 ;
               00396 ; Mind you, the application can't use interrupt priorities since these would 
gpasm-0.12.0 beta               shutter.s   6-3-2006  18:49:01           PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00397 ; trigger interrupts in the middle of debugger output, when the PGC and PGD pins
               00398 ; are undetermined.
               00399 ;
               00400 ; The bootloader uses RAM starting from 0x7f and working backwards for its
               00401 ; variables. 
               00402 ;
               00403 ; The programmer recieves commands by debouncing and reading PGC and
               00404 ; PGD.
               00405 ; 
               00406 ; Commands:
               00407 ; 
               00408 ; READ
               00409 ; WRITE
               00410 ; 
               00411 ; The command take a starting address.  For writes, the starting address is
               00412 ; always the start of a 64 byte block to program.  The block is erased
               00413 ; and 64 bytes are read in and programmed.  Then it waits for the next
               00414 ; command.
               00415 ; 
               00416 ; The read command just dumps all the memory starting from the address.
               00417 ; PGD goes into write mode after the command byte and address are recieved.
               00418 ; The chip must be reset to perform other commands after this.
               00419 ; 
               00420 ; PGC is always driven by the programmer.
               00421 
               00422 
               00423 
               00424 
               00425 
               00426 
               00427 
               00428 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; constants
  000000AA     00429 BOOTLOADER_READ = B'10101010'
  00000055     00430 BOOTLOADER_WRITE = B'01010101'
               00431 
  00000080     00432 BOOTLOADER_DEBOUNCE_THESHOLD = H'80'
               00433 
               00434 
               00435 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; REGISTERS
               00436 ; the highest byte the bootloader can access
  0000007F     00437 BOOTLOADER_BASE = H'7f'
               00438 
  0000007F     00439 BOOTLOADER_DEBOUNCE_COUNTER = BOOTLOADER_BASE
  0000007E     00440 BOOTLOADER_DEBOUNCE_ACCUM = BOOTLOADER_BASE - H'01'
  0000007D     00441 BOOTLOADER_DEBOUNCE_MASK = BOOTLOADER_BASE - H'02'
               00442 
               00443 ; result of debounce is 1 or 0
  0000007C     00444 BOOTLOADER_DEBOUNCE_RESULT = BOOTLOADER_BASE - H'03'
               00445 
               00446 ; result of read byte
  0000007B     00447 BOOTLOADER_COUNTER = BOOTLOADER_BASE - H'04'
  0000007A     00448 BOOTLOADER_READBYTE_RESULT = BOOTLOADER_BASE - H'05'
               00449 
               00450 ; value for write byte
gpasm-0.12.0 beta               shutter.s   6-3-2006  18:49:01           PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
  00000079     00451 BOOTLOADER_WRITEBYTE_VALUE = BOOTLOADER_BASE - H'06'
               00452 
               00453 ; address for read and write commands
  00000077     00454 BOOTLOADER_ADDRESS16 = BOOTLOADER_BASE - H'08'
               00455 
               00456 ; counter for writing blocks of 64 bytes
  00000076     00457 BOOTLOADER_WRITECOUNTER = BOOTLOADER_BASE - H'09'
               00458 
               00459 ; whether the bootloader recieved a reset, interrupthi, or interruptlo
  00000075     00460 BOOTLOADER_STATE = BOOTLOADER_BASE - H'0a'
               00461 ; bits for the state
  00000000     00462 BOOTLOADER_RESET = D'0'
  00000001     00463 BOOTLOADER_HI = D'1'
  00000002     00464 BOOTLOADER_LO = D'2'
               00465 
               00466 
               00467 
               00468 
               00469 
               00470 
               00471 ; macros
               00472 ; these overwrite FSR0
               00473 
               00474 ; skip next command if debounced mask in register is on
               00475 BOOTLOADER_SKIP_DEBOUNCE_ON MACRO register, mask
               00476         SET_REGISTER FSR0L, LOW(register)
               00477         SET_REGISTER BOOTLOADER_DEBOUNCE_MASK, mask
               00478         call bootloader_debounce
               00479         SKIP_EQUAL_LITERAL BOOTLOADER_DEBOUNCE_ACCUM, BOOTLOADER_DEBOUNCE_THESHOLD
               00480         ENDM
               00481 
               00482 ; skip next command if debounced mask in register is off
               00483 BOOTLOADER_SKIP_DEBOUNCE_OFF MACRO register, mask
               00484         SET_REGISTER FSR0L, LOW(register)
               00485         SET_REGISTER BOOTLOADER_DEBOUNCE_MASK, mask
               00486         call bootloader_debounce
               00487 ; skip if accum under threshold
               00488         SKIP_EQUAL_LITERAL BOOTLOADER_DEBOUNCE_ACCUM, H'00'
               00489         ENDM
               00490 
               00491 ; read 16 bits from pins
               00492 BOOTLOADER_READ_INT16 MACRO dst
               00493         call bootloader_readbyte
               00494         COPY_REGISTER dst, BOOTLOADER_READBYTE_RESULT
               00495         call bootloader_readbyte
               00496         COPY_REGISTER dst + D'1', BOOTLOADER_READBYTE_RESULT
               00497         ENDM
               00498 
               00499 ; write an 8 bit literal to PGD using PGC
               00500 ; these overwrite FSR0
               00501 BOOTLOADER_WRITE_LITERAL MACRO literal
               00502         SET_REGISTER FSR0H, H'0f'
               00503         SET_REGISTER BOOTLOADER_WRITEBYTE_VALUE, B'00101111'
               00504         call bootloader_writebyte
gpasm-0.12.0 beta               shutter.s   6-3-2006  18:49:01           PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00505         SET_REGISTER BOOTLOADER_WRITEBYTE_VALUE, literal
               00506         call bootloader_writebyte
               00507         ENDM
               00508 
               00509 ; write an 8 bit register to PGD using PGC
               00510 ; these overwrite FSR0
               00511 BOOTLOADER_WRITE_REG MACRO reg
               00512         SET_REGISTER FSR0H, H'0f'
               00513         SET_REGISTER BOOTLOADER_WRITEBYTE_VALUE, B'00101111'
               00514         call bootloader_writebyte
               00515         COPY_REGISTER BOOTLOADER_WRITEBYTE_VALUE, reg
               00516         call bootloader_writebyte
               00517         ENDM
               00518 
               00519 ; write a 16 bit register to PGD using PGC
               00520 ; these overwrite FSR0
               00521 BOOTLOADER_WRITE_REG16 MACRO reg
               00522         SET_REGISTER FSR0H, H'0f'
               00523         SET_REGISTER BOOTLOADER_WRITEBYTE_VALUE, B'01001111'
               00524         call bootloader_writebyte
               00525         COPY_REGISTER BOOTLOADER_WRITEBYTE_VALUE, reg
               00526         call bootloader_writebyte
               00527         COPY_REGISTER BOOTLOADER_WRITEBYTE_VALUE, reg + D'1'
               00528         call bootloader_writebyte
               00529         ENDM
               00530 
               00531 ; write a 32 bit register to PGD using PGC
               00532 ; these overwrite FSR0
               00533 BOOTLOADER_WRITE_REG32 MACRO reg
               00534         SET_REGISTER FSR0H, H'0f'
               00535         SET_REGISTER BOOTLOADER_WRITEBYTE_VALUE, B'10001111'
               00536         call bootloader_writebyte
               00537         COPY_REGISTER BOOTLOADER_WRITEBYTE_VALUE, reg
               00538         call bootloader_writebyte
               00539         COPY_REGISTER BOOTLOADER_WRITEBYTE_VALUE, reg + D'1'
               00540         call bootloader_writebyte
               00541         COPY_REGISTER BOOTLOADER_WRITEBYTE_VALUE, reg + D'2'
               00542         call bootloader_writebyte
               00543         COPY_REGISTER BOOTLOADER_WRITEBYTE_VALUE, reg + D'3'
               00544         call bootloader_writebyte
               00545         ENDM
               00546 
               00547 ; write a 48 bit register to PGD using PGC
               00548 ; these overwrite FSR0
               00549 BOOTLOADER_WRITE_REG48 MACRO reg
               00550         SET_REGISTER FSR0H, H'0f'
               00551         SET_REGISTER BOOTLOADER_WRITEBYTE_VALUE, B'11001111'
               00552         call bootloader_writebyte
               00553         COPY_REGISTER BOOTLOADER_WRITEBYTE_VALUE, reg
               00554         call bootloader_writebyte
               00555         COPY_REGISTER BOOTLOADER_WRITEBYTE_VALUE, reg + D'1'
               00556         call bootloader_writebyte
               00557         COPY_REGISTER BOOTLOADER_WRITEBYTE_VALUE, reg + D'2'
               00558         call bootloader_writebyte
gpasm-0.12.0 beta               shutter.s   6-3-2006  18:49:01           PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00559         COPY_REGISTER BOOTLOADER_WRITEBYTE_VALUE, reg + D'3'
               00560         call bootloader_writebyte
               00561         COPY_REGISTER BOOTLOADER_WRITEBYTE_VALUE, reg + D'4'
               00562         call bootloader_writebyte
               00563         COPY_REGISTER BOOTLOADER_WRITEBYTE_VALUE, reg + D'5'
               00564         call bootloader_writebyte
               00565         ENDM
               00566 
               00567 ; write a 64 bit register to PGD using PGC
               00568 ; these overwrite FSR0
               00569 BOOTLOADER_WRITE_REG64 MACRO reg
               00570         SET_REGISTER FSR0H, H'0f'
               00571         SET_REGISTER BOOTLOADER_WRITEBYTE_VALUE, B'11101111'
               00572         call bootloader_writebyte
               00573         COPY_REGISTER BOOTLOADER_WRITEBYTE_VALUE, reg
               00574         call bootloader_writebyte
               00575         COPY_REGISTER BOOTLOADER_WRITEBYTE_VALUE, reg + D'1'
               00576         call bootloader_writebyte
               00577         COPY_REGISTER BOOTLOADER_WRITEBYTE_VALUE, reg + D'2'
               00578         call bootloader_writebyte
               00579         COPY_REGISTER BOOTLOADER_WRITEBYTE_VALUE, reg + D'3'
               00580         call bootloader_writebyte
               00581         COPY_REGISTER BOOTLOADER_WRITEBYTE_VALUE, reg + D'4'
               00582         call bootloader_writebyte
               00583         COPY_REGISTER BOOTLOADER_WRITEBYTE_VALUE, reg + D'5'
               00584         call bootloader_writebyte
               00585         COPY_REGISTER BOOTLOADER_WRITEBYTE_VALUE, reg + D'6'
               00586         call bootloader_writebyte
               00587         COPY_REGISTER BOOTLOADER_WRITEBYTE_VALUE, reg + D'7'
               00588         call bootloader_writebyte
               00589         ENDM
               00590 
               00591 
               00592 
               00593 
               00594 ;;;;;;;;;;;;;;;;;;;;;;;;;;; START OF BOOTLOADER EXECUTABLE
               00595 ; This always appears at the start of every program.
               00596 ; This part of the program is only written in the programming harness.
               00597 ; It is skipped when writing using the bootloader.
               00598 
               00599 
               00600 
               00601 
               00602 ; jump to start on reset
0000           00603         ORG RESETVECTOR
               00604         SET_REGISTER BOOTLOADER_STATE, B'00000001'
0000 0E01          M         movlw literal
0002 6E75          M         movwf reg
0004 EF71 F000 00605         goto bootloader_start
               00606 
               00607 ; jump to interrupt handler on interrupt
0008           00608         ORG INTVECTORHI
               00609         SET_REGISTER BOOTLOADER_STATE, B'00000010'
0008 0E02          M         movlw literal
gpasm-0.12.0 beta               shutter.s   6-3-2006  18:49:01           PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
000A 6E75          M         movwf reg
000C EF71 F000 00610         goto bootloader_start
               00611 
0018           00612         ORG INTVECTORLO
               00613         SET_REGISTER BOOTLOADER_STATE, B'00000100'
0018 0E04          M         movlw literal
001A 6E75          M         movwf reg
001C EF71 F000 00614         goto bootloader_start
               00615 
               00616 
               00617 
               00618 
               00619 
               00620 
0020           00621 bootloader_debounce:
               00622 ; reset variables
               00623         SET_REGISTER BOOTLOADER_DEBOUNCE_COUNTER, BOOTLOADER_DEBOUNCE_THESHOLD
0020 0E80          M         movlw literal
0022 6E7F          M         movwf reg
0024 6A7E      00624         clrf BOOTLOADER_DEBOUNCE_ACCUM
0026 0004      00625         clrwdt
               00626 
0028           00627 bootloader_debounce1:
               00628 ; load mask for debouncer
0028 507D      00629         movf BOOTLOADER_DEBOUNCE_MASK, W
               00630 ; and mask with user register
002A 14EF      00631         andwf INDF0, W
               00632 ; if all zero, skip
002C A4D8      00633         btfss STATUS, Z
               00634 
               00635 ; mask had a 1
002E 2A7E      00636                 incf BOOTLOADER_DEBOUNCE_ACCUM, F
               00637         
               00638 ; decrease counter
0030 2E7F      00639         decfsz BOOTLOADER_DEBOUNCE_COUNTER, F
               00640 ; counter not zero
0032 EF14 F000 00641         goto bootloader_debounce1;
               00642 
               00643 ; counter zero
0036 0012      00644         return
               00645 
               00646 
               00647 
               00648 
               00649 
               00650 
               00651 
               00652 ; wait for down edge and read the value off PGD
0038           00653 bootloader_readbit:
               00654 ; wait for PGC to go high
               00655         BOOTLOADER_SKIP_DEBOUNCE_ON PORTB, B'01000000'
                   M         SET_REGISTER FSR0L, LOW(register)
0038 0E81          M         movlw literal
003A 6EE9          M         movwf reg
gpasm-0.12.0 beta               shutter.s   6-3-2006  18:49:01           PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
                   M         SET_REGISTER BOOTLOADER_DEBOUNCE_MASK, mask
003C 0E40          M         movlw literal
003E 6E7D          M         movwf reg
0040 EC10 F000     M         call bootloader_debounce
                   M         SKIP_EQUAL_LITERAL BOOTLOADER_DEBOUNCE_ACCUM, BOOTLOADER_DEBOUNCE_THESHOLD
0044 0E80          M         movlw literal
0046 627E          M         cpfseq reg1, W
               00656 ; try again
0048 EF1C F000 00657         goto bootloader_readbit
               00658 
               00659 
               00660 
               00661 
               00662 ; wait for PGC to go low
               00663 ; skip if PGC low
004C           00664 bootloader_readbit2:
               00665         BOOTLOADER_SKIP_DEBOUNCE_OFF PORTB, B'01000000'
                   M         SET_REGISTER FSR0L, LOW(register)
004C 0E81          M         movlw literal
004E 6EE9          M         movwf reg
                   M         SET_REGISTER BOOTLOADER_DEBOUNCE_MASK, mask
0050 0E40          M         movlw literal
0052 6E7D          M         movwf reg
0054 EC10 F000     M         call bootloader_debounce
                   M ; skip if accum under threshold
                   M         SKIP_EQUAL_LITERAL BOOTLOADER_DEBOUNCE_ACCUM, H'00'
0058 0E00          M         movlw literal
005A 627E          M         cpfseq reg1, W
005C EF26 F000 00666         goto bootloader_readbit2
               00667 
               00668 
               00669 
               00670 ; get debounced value of PGD
               00671         SET_REGISTER FSR0L, LOW(PORTB)
0060 0E81          M         movlw literal
0062 6EE9          M         movwf reg
               00672         SET_REGISTER BOOTLOADER_DEBOUNCE_MASK, B'10000000'
0064 0E80          M         movlw literal
0066 6E7D          M         movwf reg
0068 DFDB      00673         rcall bootloader_debounce
               00674 
006A 907C      00675         bcf BOOTLOADER_DEBOUNCE_RESULT, D'0'
               00676         SKIP_EQUAL_LITERAL BOOTLOADER_DEBOUNCE_ACCUM, H'00'
006C 0E00          M         movlw literal
006E 627E          M         cpfseq reg1, W
0070 807C      00677                 bsf BOOTLOADER_DEBOUNCE_RESULT, D'0'
               00678 
0072 0012      00679         return
               00680 
               00681 
               00682 
               00683 
               00684 
               00685 
gpasm-0.12.0 beta               shutter.s   6-3-2006  18:49:01           PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00686 
               00687 ; read a byte on the down cycles
               00688 ; least significant bits are first
0074           00689 bootloader_readbyte:
               00690         SET_REGISTER BOOTLOADER_COUNTER, H'08'
0074 0E08          M         movlw literal
0076 6E7B          M         movwf reg
0078 6A7A      00691         clrf BOOTLOADER_READBYTE_RESULT
               00692 
007A           00693 bootloader_readbyte1:
               00694 ; right shift result
007A 427A      00695         rrncf BOOTLOADER_READBYTE_RESULT, F
               00696 ; get next bit
007C DFDD      00697         rcall bootloader_readbit
               00698 
               00699 
               00700 ; or bit from PGD if it's on
007E B07C      00701         btfsc BOOTLOADER_DEBOUNCE_RESULT, D'0'
0080 8E7A      00702         bsf BOOTLOADER_READBYTE_RESULT, D'7'
               00703 
               00704 ; decrease counter and return if 0
0082 4E7B      00705         dcfsnz BOOTLOADER_COUNTER, F
0084 0012      00706         return
               00707 
               00708 ; repeat
0086 EF3D F000 00709         goto bootloader_readbyte1
               00710 
               00711 
               00712 
               00713 
               00714 
               00715 
               00716 
               00717 
               00718 
               00719 ; write a byte on the up cycles
               00720 ; least significant bits are first
008A           00721 bootloader_writebyte:
               00722         SET_REGISTER BOOTLOADER_COUNTER, H'08'
008A 0E08          M         movlw literal
008C 6E7B          M         movwf reg
               00723 
008E           00724 bootloader_writebyte1:
               00725 ; wait for PGC to go high
               00726         BOOTLOADER_SKIP_DEBOUNCE_ON PORTB, B'01000000'
                   M         SET_REGISTER FSR0L, LOW(register)
008E 0E81          M         movlw literal
0090 6EE9          M         movwf reg
                   M         SET_REGISTER BOOTLOADER_DEBOUNCE_MASK, mask
0092 0E40          M         movlw literal
0094 6E7D          M         movwf reg
0096 EC10 F000     M         call bootloader_debounce
                   M         SKIP_EQUAL_LITERAL BOOTLOADER_DEBOUNCE_ACCUM, BOOTLOADER_DEBOUNCE_THESHOLD
009A 0E80          M         movlw literal
gpasm-0.12.0 beta               shutter.s   6-3-2006  18:49:01           PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
009C 627E          M         cpfseq reg1, W
009E EF47 F000 00727         goto bootloader_writebyte1
               00728 
               00729 
               00730 ; Now that the user has disabled PGD drivers, set PGD to output mode
00A2 9E93      00731         bcf TRISB, D'7'
               00732 
               00733 ; set PGD to bit
00A4 9E81      00734         bcf PORTB, D'7'
00A6 B079      00735         btfsc BOOTLOADER_WRITEBYTE_VALUE, D'0'
00A8 8E81      00736         bsf PORTB, D'7'
               00737 
               00738 
00AA           00739 bootloader_writebyte2:
               00740 ; wait for PGC to go low, indicating reception of the bit in progress
               00741         BOOTLOADER_SKIP_DEBOUNCE_OFF PORTB, B'01000000'
                   M         SET_REGISTER FSR0L, LOW(register)
00AA 0E81          M         movlw literal
00AC 6EE9          M         movwf reg
                   M         SET_REGISTER BOOTLOADER_DEBOUNCE_MASK, mask
00AE 0E40          M         movlw literal
00B0 6E7D          M         movwf reg
00B2 EC10 F000     M         call bootloader_debounce
                   M ; skip if accum under threshold
                   M         SKIP_EQUAL_LITERAL BOOTLOADER_DEBOUNCE_ACCUM, H'00'
00B6 0E00          M         movlw literal
00B8 627E          M         cpfseq reg1, W
00BA EF55 F000 00742         goto bootloader_writebyte2
               00743 
               00744 ; decrease counter and return if 0
00BE 4E7B      00745         dcfsnz BOOTLOADER_COUNTER, F
00C0 EF65 F000 00746         goto bootloader_writebyte3
               00747 
               00748 
               00749 ; shift value and repeat
00C4 3279      00750         rrcf BOOTLOADER_WRITEBYTE_VALUE, F
00C6 EF47 F000 00751         goto bootloader_writebyte1
               00752 
00CA           00753 bootloader_writebyte3:
               00754 ; wait for PGC to go high indicating bit recieved
               00755         BOOTLOADER_SKIP_DEBOUNCE_ON PORTB, B'01000000'
                   M         SET_REGISTER FSR0L, LOW(register)
00CA 0E81          M         movlw literal
00CC 6EE9          M         movwf reg
                   M         SET_REGISTER BOOTLOADER_DEBOUNCE_MASK, mask
00CE 0E40          M         movlw literal
00D0 6E7D          M         movwf reg
00D2 EC10 F000     M         call bootloader_debounce
                   M         SKIP_EQUAL_LITERAL BOOTLOADER_DEBOUNCE_ACCUM, BOOTLOADER_DEBOUNCE_THESHOLD
00D6 0E80          M         movlw literal
00D8 627E          M         cpfseq reg1, W
00DA EF65 F000 00756         goto bootloader_writebyte3
               00757 
               00758 ; Set PGD back to input mode.
gpasm-0.12.0 beta               shutter.s   6-3-2006  18:49:01           PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00DE 8E93      00759         bsf TRISB, D'7'
00E0 0012      00760         return
               00761 
               00762 
               00763 
               00764 
               00765 
               00766 
               00767 
               00768 
               00769 
               00770 ; The 18F1220 does not reset the registers in a reset.
               00771 ; Must handle interrupts from the last invocation of the firmware and reset
               00772 ; the registers.
00E2           00773 bootloader_start:
               00774 
               00775 
               00776 ; set internal oscillator to full speed
               00777         SET_REGISTER OSCCON, B'11110011'
00E2 0EF3          M         movlw literal
00E4 6ED3          M         movwf reg
               00778 
               00779 ; skip if PGC is on
00E6 AC81      00780         btfss PORTB, D'6'
               00781 ; go to user program if PGC is off
00E8 EF83 F000 00782         goto bootloader_skip
               00783 ; skip if PGD is on
00EC AE81      00784         btfss PORTB, D'7'
               00785 ; go to user program if PGD is off
00EE EF83 F000 00786         goto bootloader_skip
               00787 
               00788 ; disable interrupts
00F2 6AF2      00789         clrf INTCON
00F4 6AD5      00790         clrf T0CON
00F6 6ACD      00791         clrf T1CON
               00792 
               00793 ; reset pins to inputs
00F8 6892      00794         setf TRISA
00FA 6893      00795         setf TRISB
00FC 68C1      00796         setf ADCON1
               00797 ;test:
               00798 ; pin mode: 1 = digital  0 = analog
               00799 ;       bsf ADCON1, D'0'
               00800 ; 1 = input  0 = output
               00801 ;       bcf TRISA, D'0'
               00802 ;       bsf PORTA, D'0'
               00803 ;       clrwdt
               00804 ;       goto test
               00805 
               00806 ;       bsf ADCON1, D'0'
               00807 ;       bcf TRISA, D'0'
               00808 ;       bsf PORTA, D'0'
               00809 
               00810 ; set high byte of all pins to debounce
gpasm-0.12.0 beta               shutter.s   6-3-2006  18:49:01           PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00811         SET_REGISTER FSR0H, H'0f'
00FE 0E0F          M         movlw literal
0100 6EEA          M         movwf reg
               00812 
               00813 
0102 EF8C F000 00814         goto bootloader_start1
               00815 
               00816 
0106           00817 bootloader_skip:
0106 B075      00818         btfsc BOOTLOADER_STATE, BOOTLOADER_RESET
0108 EF00 F001 00819         goto PROGRAM_START
010C B275      00820         btfsc BOOTLOADER_STATE, BOOTLOADER_HI
010E EF04 F001 00821         goto PROGRAM_INTERRUPTHI
0112 B475      00822         btfsc BOOTLOADER_STATE, BOOTLOADER_LO
0114 EF08 F001 00823         goto PROGRAM_INTERRUPTLO
               00824 
               00825 
               00826 
               00827 ; wait for 0 bit followed by 1 bit to align the signal
0118           00828 bootloader_start1:
               00829 ;       rcall bootloader_readbit
               00830 ;       btfsc BOOTLOADER_DEBOUNCE_RESULT, D'0'
               00831 ;       goto bootloader_start1
               00832 
               00833 
               00834 
               00835 ;bootloader_start2:
               00836 ;       rcall bootloader_readbit
               00837 ;       btfss BOOTLOADER_DEBOUNCE_RESULT, D'0'
               00838 ;       goto bootloader_start2
               00839 
               00840 
               00841 
               00842 
               00843 
               00844 
               00845 
               00846 
               00847 
               00848 
               00849 ; main loop
0118           00850 bootloader:
               00851 
               00852 ; read command on the falling edge of pgc
0118 DFAD      00853         rcall bootloader_readbyte
               00854 
               00855         SKIP_NOTEQUAL_LITERAL BOOTLOADER_READBYTE_RESULT, BOOTLOADER_READ
011A 0EAA          M         movlw literal
011C 5C7A          M         subwf reg1, W
011E B4D8          M         btfsc STATUS, Z
0120 EF9A F000 00856         goto bootloader_read
               00857 
               00858 
               00859         SKIP_NOTEQUAL_LITERAL BOOTLOADER_READBYTE_RESULT, BOOTLOADER_WRITE
gpasm-0.12.0 beta               shutter.s   6-3-2006  18:49:01           PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0124 0E55          M         movlw literal
0126 5C7A          M         subwf reg1, W
0128 B4D8          M         btfsc STATUS, Z
012A EFA9 F000 00860         goto bootloader_write
               00861 
               00862 
               00863 
               00864 
012E 0004      00865         clrwdt
0130 EF8C F000 00866         goto bootloader
               00867 
               00868 
               00869 
               00870 
               00871 
               00872 
0134           00873 bootloader_read:
               00874         BOOTLOADER_READ_INT16 TBLPTRL
0134 EC3A F000     M         call bootloader_readbyte
                   M         COPY_REGISTER dst, BOOTLOADER_READBYTE_RESULT
0138 C07A FFF6     M         movff src, dst
013C EC3A F000     M         call bootloader_readbyte
                   M         COPY_REGISTER dst + D'1', BOOTLOADER_READBYTE_RESULT
0140 C07A FFF7     M         movff src, dst
               00875 
0144 6AF8      00876         clrf TBLPTRU
               00877 
               00878         
               00879 
               00880 
0146           00881 bootloader_read1:
               00882 ; read byte with post increment
0146 0009      00883         tblrd *+
               00884 ; copy to user register
               00885         COPY_REGISTER BOOTLOADER_WRITEBYTE_VALUE, TABLAT
0148 CFF5 F079     M         movff src, dst
               00886 ; send through pins
014C DF9E      00887         rcall bootloader_writebyte
014E EFA3 F000 00888         goto bootloader_read1
               00889 
               00890 
               00891 
               00892 
               00893 
               00894 
               00895 
0152           00896 bootloader_write:
               00897 
               00898 
               00899 ; get address of next 64 byte block
               00900         BOOTLOADER_READ_INT16 TBLPTRL
0152 EC3A F000     M         call bootloader_readbyte
                   M         COPY_REGISTER dst, BOOTLOADER_READBYTE_RESULT
0156 C07A FFF6     M         movff src, dst
gpasm-0.12.0 beta               shutter.s   6-3-2006  18:49:01           PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
015A EC3A F000     M         call bootloader_readbyte
                   M         COPY_REGISTER dst + D'1', BOOTLOADER_READBYTE_RESULT
015E C07A FFF7     M         movff src, dst
0162 6AF8      00901         clrf TBLPTRU
               00902 
               00903 ; direct access to code memory
0164 8EA6      00904         bsf EECON1, EEPGD
0166 9CA6      00905         bcf EECON1, CFGS
               00906 
               00907 ; enable memory write and setup an erase
0168 84A6      00908         bsf EECON1, WREN
016A 88A6      00909         bsf EECON1, FREE
               00910 
               00911 ; unlock flash
               00912         SET_REGISTER EECON2, H'55'
016C 0E55          M         movlw literal
016E 6EA7          M         movwf reg
               00913         SET_REGISTER EECON2, H'aa'
0170 0EAA          M         movlw literal
0172 6EA7          M         movwf reg
               00914 
               00915 ; start erase
0174 82A6      00916         bsf EECON1, WR
0176 0000      00917         nop
               00918 
               00919 
               00920 ; read and write 64 bytes
               00921 ; set counter for 8 blocks of 8 bytes
               00922         SET_REGISTER BOOTLOADER_WRITECOUNTER, D'8'
0178 0E08          M         movlw literal
017A 6E76          M         movwf reg
               00923 
017C           00924 bootloader_write1:
017C DF7B      00925         rcall bootloader_readbyte
               00926         COPY_REGISTER TABLAT, BOOTLOADER_READBYTE_RESULT
017E C07A FFF5     M         movff src, dst
0182 000D      00927         tblwt *+
0184 DF77      00928         rcall bootloader_readbyte
               00929         COPY_REGISTER TABLAT, BOOTLOADER_READBYTE_RESULT
0186 C07A FFF5     M         movff src, dst
018A 000D      00930         tblwt *+
018C DF73      00931         rcall bootloader_readbyte
               00932         COPY_REGISTER TABLAT, BOOTLOADER_READBYTE_RESULT
018E C07A FFF5     M         movff src, dst
0192 000D      00933         tblwt *+
0194 DF6F      00934         rcall bootloader_readbyte
               00935         COPY_REGISTER TABLAT, BOOTLOADER_READBYTE_RESULT
0196 C07A FFF5     M         movff src, dst
019A 000D      00936         tblwt *+
019C DF6B      00937         rcall bootloader_readbyte
               00938         COPY_REGISTER TABLAT, BOOTLOADER_READBYTE_RESULT
019E C07A FFF5     M         movff src, dst
01A2 000D      00939         tblwt *+
01A4 DF67      00940         rcall bootloader_readbyte
gpasm-0.12.0 beta               shutter.s   6-3-2006  18:49:01           PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00941         COPY_REGISTER TABLAT, BOOTLOADER_READBYTE_RESULT
01A6 C07A FFF5     M         movff src, dst
01AA 000D      00942         tblwt *+
01AC DF63      00943         rcall bootloader_readbyte
               00944         COPY_REGISTER TABLAT, BOOTLOADER_READBYTE_RESULT
01AE C07A FFF5     M         movff src, dst
01B2 000D      00945         tblwt *+
01B4 DF5F      00946         rcall bootloader_readbyte
               00947         COPY_REGISTER TABLAT, BOOTLOADER_READBYTE_RESULT
01B6 C07A FFF5     M         movff src, dst
01BA 000C      00948         tblwt *
               00949 
               00950         SET_REGISTER EECON2, H'55'
01BC 0E55          M         movlw literal
01BE 6EA7          M         movwf reg
               00951         SET_REGISTER EECON2, H'aa'
01C0 0EAA          M         movlw literal
01C2 6EA7          M         movwf reg
01C4 82A6      00952         bsf EECON1, WR
01C6 0000      00953         nop
               00954 
               00955 ; increase table pointer
               00956 ; write operations always line up on 0x40 byte boundaries so don't worry
               00957 ; about the high byte
01C8 2AF6      00958         incf TBLPTRL, F
               00959 
               00960 ; decrease write counter and skip if zero
01CA 2E76      00961         decfsz BOOTLOADER_WRITECOUNTER, F
01CC EFBE F000 00962         goto bootloader_write1
               00963 
01D0 EF8C F000 00964         goto bootloader
               00965 
               00966 
               00967 
               00968 
               00969 
               00970 
               00971 
               00972 
               00973 
               00974 
               00088 
               00089 
               00090 ; registers
  00000000     00091 CURRENT_OPERATION = H'00'
               00092 ; values for current operation
  00000001     00093 RAISE_MIRROR = H'01'
  00000002     00094 MIRROR_DELAY = H'02'
  00000003     00095 EXPOSURE_DELAY = H'03'
  00000004     00096 STORAGE_DELAY = H'04'
               00097 
               00098 ; 16 upper bits of current timer value in units of Fosc/4
  00000001     00099 CURRENT_TIME16 = H'01'
               00100 
gpasm-0.12.0 beta               shutter.s   6-3-2006  18:49:01           PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00101 ; bitmask value to be converted to a time
  00000005     00102 BITMASK_VALUE = H'05'
               00103 
  00000006     00104 INTERRUPT_DONE = H'06'
               00105 
               00106 
0200           00107         ORG PROGRAM_START
0200 EFAA F001 00108         goto start
               00109 
0208           00110         ORG PROGRAM_INTERRUPTHI
0208 EFC3 F001 00111         goto interrupt
               00112         
0210           00113         ORG PROGRAM_INTERRUPTLO
0210 EFC3 F001 00114         goto interrupt
               00115 
               00116 
               00117 
               00118 
               00119 
               00120 ; tables of times for each bitmask
               00121 ; big endian for readability
               00122 ; based on Fosc / 4 of 2Mhz
               00123 ; Since the hardware timers count up, 
               00124 ; the table is calculated by subtracting the time from 0x100000000
0214           00125 mirror_delays:
               00126 ; 00 - 0 seconds/disabled
               00127         DATA_BE H'ffff', H'0000'
0214 FFFF          M         DATA word1
0216 0000          M         DATA word2
               00128 ; 01 - 3 seconds
               00129     DATA_BE H'ffa4', H'7280'
0218 FFA4          M         DATA word1
021A 7280          M         DATA word2
               00130 ; 10 - 5 seconds
               00131         DATA_BE H'ff67', H'6980'
021C FF67          M         DATA word1
021E 6980          M         DATA word2
               00132 ; 11 - 10 seconds
               00133         DATA_BE H'fece', H'd300'
0220 FECE          M         DATA word1
0222 D300          M         DATA word2
               00134 
               00135 
               00136 
               00137 
               00138 
               00139 
               00140 
0224           00141 exposure_delays:
               00142 ; 0000 - continuous
               00143         DATA_BE H'0000', H'0000'
0224 0000          M         DATA word1
0226 0000          M         DATA word2
               00144 ; 0001 - 1 second
gpasm-0.12.0 beta               shutter.s   6-3-2006  18:49:01           PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00145         DATA_BE H'ffe1', H'7b80'
0228 FFE1          M         DATA word1
022A 7B80          M         DATA word2
               00146 ; 0010 - 2 seconds
               00147         DATA_BE H'ffc2', H'f700'
022C FFC2          M         DATA word1
022E F700          M         DATA word2
               00148 ; 0011 - 5 seconds
               00149         DATA_BE H'ff67', H'6980'
0230 FF67          M         DATA word1
0232 6980          M         DATA word2
               00150 ; 0100 - 10 seconds
               00151         DATA_BE H'fece', H'd300'
0234 FECE          M         DATA word1
0236 D300          M         DATA word2
               00152 ; 0101 - 15 seconds
               00153         DATA_BE H'fe36', H'3c80'
0238 FE36          M         DATA word1
023A 3C80          M         DATA word2
               00154 ; 0110 - 30 seconds
               00155         DATA_BE H'fc6c', H'7900'
023C FC6C          M         DATA word1
023E 7900          M         DATA word2
               00156 ; 0111 - 45 seconds
               00157         DATA_BE H'faa2', H'b580'
0240 FAA2          M         DATA word1
0242 B580          M         DATA word2
               00158 ; 1000 - 1 minute
               00159         DATA_BE H'f8d8', H'f200'
0244 F8D8          M         DATA word1
0246 F200          M         DATA word2
               00160 ; 1001 - 2 minutes
               00161         DATA_BE H'f1b1', H'e400'
0248 F1B1          M         DATA word1
024A E400          M         DATA word2
               00162 ; 1010 - 5 minutes
               00163         DATA_BE H'dc3c', H'ba00'
024C DC3C          M         DATA word1
024E BA00          M         DATA word2
               00164 
               00165 
               00166 
               00167 
               00168 
               00169 
               00170 
0250           00171 storage_delays:
               00172 ; 00 - 1 second
               00173         DATA_BE H'ffe1', H'7b80'
0250 FFE1          M         DATA word1
0252 7B80          M         DATA word2
               00174 ; 01 - 5 seconds
               00175         DATA_BE H'ff67', H'6980'
0254 FF67          M         DATA word1
gpasm-0.12.0 beta               shutter.s   6-3-2006  18:49:01           PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0256 6980          M         DATA word2
               00176 ; 10 - 10 seconds
               00177         DATA_BE H'fece', H'd300'
0258 FECE          M         DATA word1
025A D300          M         DATA word2
               00178 ; 11 - 30 seconds
               00179         DATA_BE H'fc6c', H'7900'
025C FC6C          M         DATA word1
025E 7900          M         DATA word2
               00180 
               00181 
               00182 
               00183 
               00184 
               00185 
               00186 
               00187 
               00188 
               00189 
               00190 ; set the starting operation based on mirror lockup delay
               00191 ; no lockup delay disables the mirror lockup pulse
0260           00192 reset_operation:
               00193         SET_REGISTER CURRENT_OPERATION, RAISE_MIRROR
0260 0E01          M         movlw literal
0262 6E00          M         movwf reg
0264 BC80      00194         btfsc PORTA, D'6'
0266 0012      00195         return
0268 BE80      00196         btfsc PORTA, D'7'
026A 0012      00197         return
               00198         SET_REGISTER CURRENT_OPERATION, EXPOSURE_DELAY
026C 0E03          M         movlw literal
026E 6E00          M         movwf reg
0270 0012      00199         return
               00200 
               00201 
               00202 
               00203 
               00204 
               00205 
               00206 
               00207 
               00208 
               00209 
               00210 
               00211 
               00212 ; convert the bitmask value to a timer value
               00213 ; and store it in the timer
0272           00214 bitmask_to_timer:
               00215 ; add current bitmask
0272 5005      00216         movf BITMASK_VALUE, W
0274 26F6      00217         addwf TBLPTRL, F
0276 0E00      00218         movlw H'00'
0278 22F7      00219         addwfc TBLPTRH, F
               00220 
gpasm-0.12.0 beta               shutter.s   6-3-2006  18:49:01           PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00221 ; read bytes with post increment
027A 0009      00222         tblrd *+
027C CFF5 F001 00223         movff TABLAT, CURRENT_TIME16 + D'0'
0280 0009      00224         tblrd *+
0282 50F5      00225         movf TABLAT, W
0284 CFF5 F002 00226         movff TABLAT, CURRENT_TIME16 + D'1'
0288 0009      00227         tblrd *+
028A 50F5      00228         movf TABLAT, W
028C CFF5 F003 00229         movff TABLAT, CURRENT_TIME16 + D'2'
0290 0009      00230         tblrd *+
0292 50F5      00231         movf TABLAT, W
0294 CFF5 F004 00232         movff TABLAT, CURRENT_TIME16 + D'3'
               00233 
               00234 
               00235 ; must write timer high byte first
0298 C004 FFD7 00236         movff CURRENT_TIME16 + D'3', TMR0H
029C C003 FFD6 00237         movff CURRENT_TIME16 + D'2', TMR0L
               00238 
               00239 
               00240 ; debug
               00241 ;       BOOTLOADER_WRITE_REG BITMASK_VALUE
               00242 ;       BOOTLOADER_WRITE_REG16 CURRENT_TIME16
02A0 0012      00243         return
               00244 
               00245 
               00246 
               00247 
               00248 
               00249 
               00250 
               00251 
               00252 
               00253 ; do the current operation, update the timer, and advance operation
02A2           00254 do_operation:
               00255 ; shutter on, set timer to minimum
               00256         SKIP_EQUAL_LITERAL CURRENT_OPERATION, RAISE_MIRROR
02A2 0E01          M         movlw literal
02A4 6200          M         cpfseq reg1, W
02A6 EF62 F001 00257         goto do_operation2
               00258 
               00259 ; don't enable if powering down
02AA 9281      00260                 bcf PORTB, D'1'
02AC B081      00261                 btfsc PORTB, D'0'
02AE 8281      00262                         bsf PORTB, D'1'
               00263 
               00264 ; send required 1 second pulse for mirror lockup
               00265                 SET_REGISTER16 CURRENT_TIME16, H'ffe1'
02B0 0EE1          M         movlw LOW(literal)
02B2 6E01          M         movwf reglo
02B4 0EFF          M         movlw HIGH(literal)
02B6 6E02          M         movwf reglo + D'1'
               00266                 SET_TIMER_REGISTER TMR0L, H'7b80'
02B8 0E7B          M         movlw HIGH(literal)
02BA 6ED7          M         movwf reglo + D'1'
gpasm-0.12.0 beta               shutter.s   6-3-2006  18:49:01           PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
02BC 0E80          M         movlw LOW(literal)
02BE 6ED6          M         movwf reglo
               00267 
02C0 2A00      00268                 incf CURRENT_OPERATION, F
02C2 0012      00269                 return
               00270 
               00271 
               00272 
               00273 
               00274 
               00275 
               00276 
02C4           00277 do_operation2:
               00278 ; shutter of, set timer to mirror delay
               00279         SKIP_EQUAL_LITERAL CURRENT_OPERATION, MIRROR_DELAY
02C4 0E02          M         movlw literal
02C6 6200          M         cpfseq reg1, W
02C8 EF75 F001 00280         goto do_operation4
               00281 
02CC 9281      00282                 bcf PORTB, D'1'
02CE 6A05      00283                 clrf BITMASK_VALUE
               00284 ; get bitmask from pins
               00285 ; shift left 2 bits to correspond to table offset in memory
02D0 BC80      00286                 btfsc PORTA, D'6'
02D2 8605      00287                         bsf BITMASK_VALUE, D'3'
02D4 BE80      00288                 btfsc PORTA, D'7'
02D6 8405      00289                         bsf BITMASK_VALUE, D'2'
               00290 ; write start address of bitmask table
02D8 6AF8      00291                 clrf TBLPTRU
               00292                 SET_REGISTER16 TBLPTRL, mirror_delays
02DA 0E14          M         movlw LOW(literal)
02DC 6EF6          M         movwf reglo
02DE 0E02          M         movlw HIGH(literal)
02E0 6EF7          M         movwf reglo + D'1'
               00293 
               00294 ; translate bitmask to timer value
02E2 EC39 F001 00295                 call bitmask_to_timer
               00296 
02E6 2A00      00297                 incf CURRENT_OPERATION, F
02E8 0012      00298                 return
               00299 
               00300 
               00301 
02EA           00302 do_operation4:
               00303 ; shutter on, set timer to exposure delay
               00304         SKIP_EQUAL_LITERAL CURRENT_OPERATION, EXPOSURE_DELAY
02EA 0E03          M         movlw literal
02EC 6200          M         cpfseq reg1, W
02EE EF8E F001 00305         goto do_operation5
               00306 
               00307 ; don't enable if powering down
02F2 9281      00308                 bcf PORTB, D'1'
02F4 B081      00309                 btfsc PORTB, D'0'
02F6 8281      00310                         bsf PORTB, D'1'
gpasm-0.12.0 beta               shutter.s   6-3-2006  18:49:01           PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00311 
               00312 
02F8 6A05      00313                 clrf BITMASK_VALUE
               00314 ; get bitmask from pins
               00315 ; shift left 2 bits to correspond to table offset in memory
02FA B080      00316                 btfsc PORTA, D'0'
02FC 8A05      00317                         bsf BITMASK_VALUE, D'5'
02FE B280      00318                 btfsc PORTA, D'1'
0300 8805      00319                         bsf BITMASK_VALUE, D'4'
0302 B480      00320                 btfsc PORTA, D'2'
0304 8605      00321                         bsf BITMASK_VALUE, D'3'
0306 B680      00322                 btfsc PORTA, D'3'
0308 8405      00323                         bsf BITMASK_VALUE, D'2'
               00324 ; write start address of bitmask table
030A 6AF8      00325                 clrf TBLPTRU
               00326                 SET_REGISTER16 TBLPTRL, exposure_delays
030C 0E24          M         movlw LOW(literal)
030E 6EF6          M         movwf reglo
0310 0E02          M         movlw HIGH(literal)
0312 6EF7          M         movwf reglo + D'1'
               00327 
               00328 ; translate bitmask to timer value
0314 EC39 F001 00329                 call bitmask_to_timer
               00330 
0318 2A00      00331                 incf CURRENT_OPERATION, F
031A 0012      00332                 return
               00333 
               00334 
031C           00335 do_operation5:
               00336 ; if continuous mode, do nothing.  User must power down
031C 0E0F      00337                 movlw H'0f'
031E 1480      00338                 andwf PORTA, W
0320 E101      00339                 bnz shutter_off
0322 0012      00340                         return
               00341 
0324           00342 shutter_off:
               00343 ; shutter off, set timer to storage delay
0324 9281      00344         bcf PORTB, D'1'
               00345 
               00346 
               00347 
0326 6A05      00348         clrf BITMASK_VALUE
               00349 ; get bitmask from pins
               00350 ; shift left 2 bits to correspond to table offset in memory
0328 B481      00351         btfsc PORTB, D'2'
032A 8605      00352                 bsf BITMASK_VALUE, D'3'
032C B681      00353         btfsc PORTB, D'3'
032E 8405      00354                 bsf BITMASK_VALUE, D'2'
               00355 ; write start address of bitmask table
0330 6AF8      00356         clrf TBLPTRU
               00357         SET_REGISTER16 TBLPTRL, storage_delays
0332 0E50          M         movlw LOW(literal)
0334 6EF6          M         movwf reglo
0336 0E02          M         movlw HIGH(literal)
gpasm-0.12.0 beta               shutter.s   6-3-2006  18:49:01           PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0338 6EF7          M         movwf reglo + D'1'
               00358 
               00359 ; translate bitmask to timer value
033A EC39 F001 00360         call bitmask_to_timer
               00361 
               00362 
               00363         
               00364 ; go to first operation on next iteration
033E EC30 F001 00365         call reset_operation
0342 0012      00366         return
               00367 
               00368 
               00369 
               00370 
               00371 
               00372 
0344           00373 handle_timer:
               00374 ; reset timer overflow
0344 94F2      00375         bcf INTCON, TMR0IF         
0346 6A06      00376         clrf INTERRUPT_DONE
               00377 
               00378 ; increase most significant bits and skip if timeout
0348 4A01      00379         infsnz CURRENT_TIME16, F
034A 3E02      00380         incfsz CURRENT_TIME16 + D'1', F
034C 0012      00381         return
               00382 
               00383 
               00384 ; do next operation
034E EC51 F001 00385                 call do_operation
0352 0012      00386                 return
               00387 
               00388 
               00389 
               00390 
               00391 
               00392 
               00393 
               00394 
0354           00395 start:
               00396 ; configure pin modes
               00397 ; pin mode: 1 = digital  0 = analog
               00398         SET_REGISTER ADCON1, B'11111111'
0354 0EFF          M         movlw literal
0356 6EC1          M         movwf reg
               00399 ; set shutter high
               00400         SET_REGISTER PORTB, B'00000000'
0358 0E00          M         movlw literal
035A 6E81          M         movwf reg
               00401 ; 1 = input  0 = output
               00402         SET_REGISTER TRISA, B'11111111'
035C 0EFF          M         movlw literal
035E 6E92          M         movwf reg
               00403         SET_REGISTER TRISB, B'11111101'
0360 0EFD          M         movlw literal
gpasm-0.12.0 beta               shutter.s   6-3-2006  18:49:01           PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0362 6E93          M         movwf reg
               00404 
               00405 
               00406 
               00407 
               00408 ; set sleep mode to idle to keep the timers running
0364 8ED3      00409         bsf OSCCON, IDLEN
               00410 
               00411 ; set first operation based on mode
0366 EC30 F001 00412         call reset_operation
               00413 
               00414 ; perform the operation
036A EC51 F001 00415         call do_operation
               00416 
               00417 
               00418 
               00419 
               00420 ; configure interrupts and timers
               00421 ; set first pulse rise and activate timer (timer 0)
               00422         SET_REGISTER T0CON, B'10001000'
036E 0E88          M         movlw literal
0370 6ED5          M         movwf reg
               00423         SET_TIMER_REGISTER TMR0L, H'0000'
0372 0E00          M         movlw HIGH(literal)
0374 6ED7          M         movwf reglo + D'1'
0376 0E00          M         movlw LOW(literal)
0378 6ED6          M         movwf reglo
               00424 ; enable interrupts
               00425 ; enable timer 0 interrupt
               00426         SET_REGISTER INTCON, B'11100000'
037A 0EE0          M         movlw literal
037C 6EF2          M         movwf reg
               00427 
               00428 
               00429 
               00430 
037E           00431 loop:
037E 0003      00432         sleep
0380 0004      00433         clrwdt
0382 EFBF F001 00434         goto loop
               00435 
               00436 
               00437 
0386           00438 interrupt:
0386 0004      00439         clrwdt
0388 6806      00440         setf INTERRUPT_DONE
               00441 
038A B4F2      00442         btfsc INTCON, TMR0IF
038C ECA2 F001 00443                 call handle_timer
               00444 
0390 A006      00445         btfss INTERRUPT_DONE, D'0'
0392 EFC3 F001 00446         goto interrupt
               00447 
0396 0010      00448                 retfie
gpasm-0.12.0 beta               shutter.s   6-3-2006  18:49:01           PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00449 
               00450 
               00451 
               00452 
               00453 
gpasm-0.12.0 beta               shutter.s   6-3-2006  18:49:01           PAGE 32


SYMBOL TABLE
  LABEL                             VALUE 

A                                 00000000
ABDEN                             00000000
ACCESS                            00000000
ACQT0                             00000003
ACQT1                             00000004
ACQT2                             00000005
ADCON0                            00000FC2
ADCON1                            00000FC1
ADCON2                            00000FC0
ADCS0                             00000000
ADCS1                             00000001
ADCS2                             00000002
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADIP                              00000006
ADON                              00000000
ADRESH                            00000FC4
ADRESL                            00000FC3
AN0                               00000000
AN1                               00000001
AN2                               00000002
AN3                               00000003
AN4                               00000000
AN5                               00000001
AN6                               00000004
BANKED                            00000001
BAUDCTL                           00000FAA
BITMASK_VALUE                     00000005
BOOTLOADER_ADDRESS16              00000077
BOOTLOADER_BASE                   0000007F
BOOTLOADER_COUNTER                0000007B
BOOTLOADER_DEBOUNCE_ACCUM         0000007E
BOOTLOADER_DEBOUNCE_COUNTER       0000007F
BOOTLOADER_DEBOUNCE_MASK          0000007D
BOOTLOADER_DEBOUNCE_RESULT        0000007C
BOOTLOADER_DEBOUNCE_THESHOLD      00000080
BOOTLOADER_HI                     00000001
BOOTLOADER_LO                     00000002
BOOTLOADER_READ                   000000AA
BOOTLOADER_READBYTE_RESULT        0000007A
BOOTLOADER_RESET                  00000000
BOOTLOADER_STATE                  00000075
BOOTLOADER_WRITE                  00000055
BOOTLOADER_WRITEBYTE_VALUE        00000079
BOOTLOADER_WRITECOUNTER           00000076
BOR                               00000000
BRG16                             00000003
BRGH                              00000002
BSR                               00000FE0
C                                 00000000
CCP1                              00000003
gpasm-0.12.0 beta               shutter.s   6-3-2006  18:49:01           PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
CCP1CON                           00000FBD
CCP1IE                            00000002
CCP1IF                            00000002
CCP1IP                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCPR1H                            00000FBF
CCPR1L                            00000FBE
CFGS                              00000006
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CK                                00000001
CLKI                              00000007
CLKO                              00000006
CREN                              00000004
CSRC                              00000007
CURRENT_OPERATION                 00000000
CURRENT_TIME16                    00000001
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DONE                              00000001
ECCPAS                            00000FB6
ECCPAS0                           00000004
ECCPAS1                           00000005
ECCPAS2                           00000006
ECCPASE                           00000007
EEADR                             00000FA9
EECON1                            00000FA6
EECON2                            00000FA7
EEDATA                            00000FA8
EEIE                              00000004
EEIF                              00000004
EEIP                              00000004
EEPGD                             00000007
EXPOSURE_DELAY                    00000003
FAST                              00000001
FERR                              00000002
FREE                              00000004
FSR0                              00000000
FSR0H                             00000FEA
FSR0L                             00000FE9
FSR1                              00000001
FSR1H                             00000FE2
FSR1L                             00000FE1
FSR2                              00000002
FSR2H                             00000FDA
FSR2L                             00000FD9
GIE                               00000007
GIEH                              00000007
GIEL                              00000006
gpasm-0.12.0 beta               shutter.s   6-3-2006  18:49:01           PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
GO                                00000001
GO_DONE                           00000001
IDLEN                             00000007
INDF0                             00000FEF
INDF1                             00000FE7
INDF2                             00000FDF
INT0                              00000000
INT0IE                            00000004
INT0IF                            00000001
INT1                              00000001
INT1IE                            00000003
INT1IF                            00000000
INT1IP                            00000006
INT2                              00000002
INT2IE                            00000004
INT2IF                            00000001
INT2IP                            00000007
INTCON                            00000FF2
INTCON2                           00000FF1
INTCON3                           00000FF0
INTEDG0                           00000006
INTEDG1                           00000005
INTEDG2                           00000004
INTERRUPT_DONE                    00000006
INTVECTORHI                       00000008
INTVECTORLO                       00000018
IOFS                              00000002
IPEN                              00000007
IPR1                              00000F9F
IPR2                              00000FA2
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRVST                             00000005
KBI0                              00000004
KBI1                              00000005
KBI2                              00000006
KBI3                              00000007
LATA                              00000F89
LATB                              00000F8A
LVDCON                            00000FD2
LVDEN                             00000004
LVDIE                             00000002
LVDIF                             00000002
LVDIN                             00000001
LVDIP                             00000002
LVDL0                             00000000
LVDL1                             00000001
LVDL2                             00000002
LVDL3                             00000003
MIRROR_DELAY                      00000002
N                                 00000004
NOT_BOR                           00000000
NOT_DONE                          00000001
gpasm-0.12.0 beta               shutter.s   6-3-2006  18:49:01           PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
NOT_PD                            00000002
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RI                            00000004
NOT_T1SYNC                        00000002
NOT_T3SYNC                        00000002
NOT_TO                            00000003
OERR                              00000001
OSC1                              00000007
OSC2                              00000006
OSCCON                            00000FD3
OSCFIE                            00000007
OSCFIF                            00000007
OSCFIP                            00000007
OSCTUNE                           00000F9B
OSTS                              00000003
OV                                00000003
P1A                               00000003
P1B                               00000002
P1C                               00000007
P1D                               00000007
P1M0                              00000006
P1M1                              00000007
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCFG4                             00000004
PCFG5                             00000005
PCFG6                             00000006
PCL                               00000FF9
PCLATH                            00000FFA
PCLATU                            00000FFB
PD                                00000002
PDC0                              00000000
PDC1                              00000001
PDC2                              00000002
PDC3                              00000003
PDC4                              00000004
PDC5                              00000005
PDC6                              00000006
PEIE                              00000006
PGC                               00000006
PGD                               00000007
PGM                               00000005
PIE1                              00000F9D
PIE2                              00000FA0
PIR1                              00000F9E
PIR2                              00000FA1
PLUSW0                            00000FEB
PLUSW1                            00000FE3
PLUSW2                            00000FDB
POR                               00000001
PORTA                             00000F80
gpasm-0.12.0 beta               shutter.s   6-3-2006  18:49:01           PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
PORTB                             00000F81
POSTDEC0                          00000FED
POSTDEC1                          00000FE5
POSTDEC2                          00000FDD
POSTINC0                          00000FEE
POSTINC1                          00000FE6
POSTINC2                          00000FDE
PR2                               00000FCB
PREINC0                           00000FEC
PREINC1                           00000FE4
PREINC2                           00000FDC
PRODH                             00000FF4
PRODL                             00000FF3
PROGRAM_INTERRUPTHI               00000208
PROGRAM_INTERRUPTLO               00000210
PROGRAM_START                     00000200
PRSEN                             00000007
PSA                               00000003
PSSAC0                            00000002
PSSAC1                            00000003
PSSBD0                            00000000
PSSBD1                            00000001
PWM1CON                           00000FB7
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RA6                               00000006
RA7                               00000007
RAISE_MIRROR                      00000001
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RBIP                              00000000
RBPU                              00000007
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCIP                              00000005
RCON                              00000FD0
RCREG                             00000FAE
RCSTA                             00000FAB
RD                                00000000
RD16                              00000007
RESETVECTOR                       00000000
gpasm-0.12.0 beta               shutter.s   6-3-2006  18:49:01           PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
RI                                00000004
RX                                00000004
RX9                               00000006
RX9D                              00000000
SCKP                              00000004
SCS0                              00000000
SCS1                              00000001
SENDB                             00000003
SPBRG                             00000FAF
SPBRGH                            00000FB0
SPEN                              00000007
SREN                              00000005
STATUS                            00000FD8
STKFUL                            00000007
STKPTR                            00000FFC
STKUNF                            00000006
STORAGE_DELAY                     00000004
SWDTEN                            00000000
SYNC                              00000004
T08BIT                            00000006
T0CKI                             00000004
T0CON                             00000FD5
T0CS                              00000005
T0IP                              00000002
T0PS0                             00000000
T0PS1                             00000001
T0PS2                             00000002
T0SE                              00000004
T1CKI                             00000006
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000FCD
T1OSCEN                           00000003
T1OSI                             00000007
T1OSO                             00000006
T1RUN                             00000006
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000FCA
T3CCP1                            00000003
T3CCP2                            00000006
T3CKPS0                           00000004
T3CKPS1                           00000005
T3CON                             00000FB1
T3SYNC                            00000002
TABLAT                            00000FF5
TBLPTRH                           00000FF7
TBLPTRL                           00000FF6
TBLPTRU                           00000FF8
TMR0H                             00000FD7
TMR0IE                            00000005
TMR0IF                            00000002
TMR0IP                            00000002
gpasm-0.12.0 beta               shutter.s   6-3-2006  18:49:01           PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
TMR0L                             00000FD6
TMR0ON                            00000007
TMR1CS                            00000001
TMR1H                             00000FCF
TMR1IE                            00000000
TMR1IF                            00000000
TMR1IP                            00000000
TMR1L                             00000FCE
TMR1ON                            00000000
TMR2                              00000FCC
TMR2IE                            00000001
TMR2IF                            00000001
TMR2IP                            00000001
TMR2ON                            00000002
TMR3CS                            00000001
TMR3H                             00000FB3
TMR3IE                            00000001
TMR3IF                            00000001
TMR3IP                            00000001
TMR3L                             00000FB2
TMR3ON                            00000000
TO                                00000003
TOSH                              00000FFE
TOSL                              00000FFD
TOSU                              00000FFF
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000F92
TRISB                             00000F93
TRMT                              00000001
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TX                                00000001
TX9                               00000006
TX9D                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXIP                              00000004
TXREG                             00000FAD
TXSTA                             00000FAC
VCFG0                             00000006
VCFG1                             00000007
VREFM                             00000002
VREFP                             00000003
W                                 00000000
WDTCON                            00000FD1
WR                                00000001
gpasm-0.12.0 beta               shutter.s   6-3-2006  18:49:01           PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
WREG                              00000FE8
WREN                              00000002
WRERR                             00000003
WUE                               00000001
Z                                 00000002
_BORV_20_2L                       000000FF
_BORV_27_2L                       000000FB
_BORV_42_2L                       000000F7
_BORV_45_2L                       000000F3
_BOR_OFF_2L                       000000FD
_BOR_ON_2L                        000000FF
_CONFIG1H                         00300001
_CONFIG2H                         00300003
_CONFIG2L                         00300002
_CONFIG3H                         00300005
_CONFIG4L                         00300006
_CONFIG5H                         00300009
_CONFIG5L                         00300008
_CONFIG6H                         0030000B
_CONFIG6L                         0030000A
_CONFIG7H                         0030000D
_CONFIG7L                         0030000C
_CP0_OFF_5L                       000000FF
_CP0_ON_5L                        000000FE
_CP1_OFF_5L                       000000FF
_CP1_ON_5L                        000000FD
_CPB_OFF_5H                       000000FF
_CPB_ON_5H                        000000BF
_CPD_OFF_5H                       000000FF
_CPD_ON_5H                        0000007F
_DEBUG_OFF_4L                     000000FF
_DEBUG_ON_4L                      0000007F
_DEVID1                           003FFFFE
_DEVID2                           003FFFFF
_EBTR0_OFF_7L                     000000FF
_EBTR0_ON_7L                      000000FE
_EBTR1_OFF_7L                     000000FF
_EBTR1_ON_7L                      000000FD
_EBTRB_OFF_7H                     000000FF
_EBTRB_ON_7H                      000000BF
_ECIO_OSC_1H                      000000F5
_EC_OSC_1H                        000000F4
_FSCM_OFF_1H                      000000BF
_FSCM_ON_1H                       000000FF
_HSPLL_OSC_1H                     000000F6
_HS_OSC_1H                        000000F2
_IDLOC0                           00200000
_IDLOC1                           00200001
_IDLOC2                           00200002
_IDLOC3                           00200003
_IDLOC4                           00200004
_IDLOC5                           00200005
_IDLOC6                           00200006
_IDLOC7                           00200007
gpasm-0.12.0 beta               shutter.s   6-3-2006  18:49:01           PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_IESO_OFF_1H                      0000007F
_IESO_ON_1H                       000000FF
_INTIO1_OSC_1H                    000000F9
_INTIO2_OSC_1H                    000000F8
_LP_OSC_1H                        000000F0
_LVP_OFF_4L                       000000FB
_LVP_ON_4L                        000000FF
_MCLRE_OFF_3H                     0000007F
_MCLRE_ON_3H                      000000FF
_PWRT_OFF_2L                      000000FF
_PWRT_ON_2L                       000000FE
_RCIO_OSC_1H                      000000F7
_RC_OSC_1H                        000000FF
_STVR_OFF_4L                      000000FE
_STVR_ON_4L                       000000FF
_WDTPS_128_2H                     000000EF
_WDTPS_16K_2H                     000000FD
_WDTPS_16_2H                      000000E9
_WDTPS_1K_2H                      000000F5
_WDTPS_1_2H                       000000E1
_WDTPS_256_2H                     000000F1
_WDTPS_2K_2H                      000000F7
_WDTPS_2_2H                       000000E3
_WDTPS_32K_2H                     000000FF
_WDTPS_32_2H                      000000EB
_WDTPS_4K_2H                      000000F9
_WDTPS_4_2H                       000000E5
_WDTPS_512_2H                     000000F3
_WDTPS_64_2H                      000000ED
_WDTPS_8K_2H                      000000FB
_WDTPS_8_2H                       000000E7
_WDT_OFF_2H                       000000FE
_WDT_ON_2H                        000000FF
_WRT0_OFF_6L                      000000FF
_WRT0_ON_6L                       000000FE
_WRT1_OFF_6L                      000000FF
_WRT1_ON_6L                       000000FD
_WRTB_OFF_6H                      000000FF
_WRTB_ON_6H                       000000BF
_WRTC_OFF_6H                      000000FF
_WRTC_ON_6H                       000000DF
_WRTD_OFF_6H                      000000FF
_WRTD_ON_6H                       0000007F
_XT_OSC_1H                        000000F1
__18F1220                         00000001
bitmask_to_timer                  00000272
bootloader                        00000118
bootloader_debounce               00000020
bootloader_debounce1              00000028
bootloader_read                   00000134
bootloader_read1                  00000146
bootloader_readbit                00000038
bootloader_readbit2               0000004C
bootloader_readbyte               00000074
gpasm-0.12.0 beta               shutter.s   6-3-2006  18:49:01           PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
bootloader_readbyte1              0000007A
bootloader_skip                   00000106
bootloader_start                  000000E2
bootloader_start1                 00000118
bootloader_write                  00000152
bootloader_write1                 0000017C
bootloader_writebyte              0000008A
bootloader_writebyte1             0000008E
bootloader_writebyte2             000000AA
bootloader_writebyte3             000000CA
do_operation                      000002A2
do_operation2                     000002C4
do_operation4                     000002EA
do_operation5                     0000031C
exposure_delays                   00000224
handle_timer                      00000344
interrupt                         00000386
loop                              0000037E
mirror_delays                     00000214
reset_operation                   00000260
shutter_off                       00000324
start                             00000354
storage_delays                    00000250
ADRES                             ADRESH         
CCP1X                             DC1B1          
CCP1Y                             DC1B0          
DDRA                              TRISA          
DDRB                              TRISB          
INTE                              INT0IE         
INTF                              INT0IF         
SCS                               SCS0           


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

00000000 : XXXXXXXXXXXXXXXX --------XXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00000040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00000080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
000000c0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00000100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00000140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00000180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
000001c0 : XXXXXXXXXXXXXXXX XXXX------------ ---------------- ----------------
00000200 : XXXX----XXXX---- XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00000240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00000280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
000002c0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00000300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00000340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00000380 : XXXXXXXXXXXXXXXX XXXXXXXX-------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used: 430


Errors   :       0
Warnings :       0 reported,       0 suppressed
Messages :       0 reported,       0 suppressed

